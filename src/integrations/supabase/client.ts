
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://npmniesphobtsoftczeh.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5wbW5pZXNwaG9idHNvZnRjemVoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA3OTc5ODYsImV4cCI6MjA2NjM3Mzk4Nn0.iTO3IXLxisUhosFZsE3cAo2oNsq8G6mWybSwjAGuJHQ";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: false, // Disable for faster login
  },
  global: {
    headers: {
      'Cache-Control': 'no-cache',
      'Connection': 'keep-alive',
    },
  },
  db: {
    schema: 'public',
  },
  realtime: {
    params: {
      eventsPerSecond: 10,
    },
  },
});

// Function to set custom auth token for requests
export const setSupabaseAuth = (token: string | null) => {
  if (token) {
    // Set Authorization header for API requests
    (supabase as any).rest.headers['Authorization'] = `Bearer ${token}`;
    // Set for realtime as well
    supabase.realtime.setAuth(token);
  } else {
    // Clear auth headers
    delete (supabase as any).rest.headers['Authorization'];
    supabase.realtime.setAuth(null);
  }
};
